# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: File Find

on:
  push:
    paths-ignore: ["**/**.md", "**/**.dox2", "**/**.dox", "**/**.dox.in", "**/LICENSE.txt", "/.github/ISSUE_TEMPLATE/**", "INSTALL", "CHANGELOG.txt", ".editorconfig", ".gitignore", ".gitatributes"]
  pull_request:
    paths-ignore: ["**/**.md", "**/**.dox2", "**/**.dox", "**/**.dox.in", "**/LICENSE.txt", "/.github/ISSUE_TEMPLATE/**", "INSTALL", "CHANGELOG.txt", ".editorconfig", ".gitignore", ".gitatributes"]

permissions:
  contents: read

jobs:
  check-syntax:
    name: "Checking Syntax"
    runs-on: macos-latest
    
    steps:
    
    - name: Setup
      uses: actions/checkout@v3
    
    - name: Install Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Testing Syntax
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
      #run: |
        #pytest



  build-with-pyinstaller:
    name: "Building macOS App"
    runs-on: macos-latest

    steps:
    - name: Setup
      uses: actions/checkout@v3
      
    - name: Install Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        pip3 install pyinstaller
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Build .app with pyinstaller
      run: |
        # x86_64 Build
        pyinstaller --noconfirm --name "File Find" --onedir --windowed --icon "./assets/icon.icns"  "./File-Find.py"
    - name: Remove Signing
      run: rm -rf ./File\ Find.app/Contents/_CodeSignature
        
    - name: Zip .app
      run: |
        cd dist
        zip -r "File Find.app.zip" "File Find.app"
    
    - name: Upload File Find.app
      uses: actions/upload-artifact@v2
      with:
          if-no-files-found: error
          name: File Find.app.zip
          path: dist/File Find.app.zip
          
