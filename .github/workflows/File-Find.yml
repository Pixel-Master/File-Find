# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and Build File Find

on:
  push:
    paths-ignore: ["**/**.md", "**/**.dox2", "**/**.dox", "**/**.dox.in", "**/LICENSE.txt", "/.github/ISSUE_TEMPLATE/**", "INSTALL", "CHANGELOG.txt", ".editorconfig", ".gitignore", ".gitatributes"]
  pull_request:
    paths-ignore: ["**/**.md", "**/**.dox2", "**/**.dox", "**/**.dox.in", "**/LICENSE.txt", "/.github/ISSUE_TEMPLATE/**", "INSTALL", "CHANGELOG.txt", ".editorconfig", ".gitignore", ".gitatributes"]

permissions:
  contents: read

jobs:
  check-syntax:
    name: "Checking Syntax"
    runs-on: macos-latest
    
    steps:
    
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Testing Syntax
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    #- name: Test with pytest
      #run: |
        #pytest



  build-with-pyinstaller:
    name: "Building macOS App with pyinstaller"
    runs-on: macos-11

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        pip3 install pyinstaller
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Build .app with pyinstaller
      run: |
        # x86_64 Build
        pyinstaller --noconfirm --name "File-Find" --onedir --windowed --icon "./assets/icon.icns" --osx-bundle-identifier "io.github.pixel-master.file-find" --target-architecture "universal2"  "./File-Find.py"     
    - name: Zip .app
      run: |
        cd dist
        zip -r File-Find.app.zip File-Find.app
    
    - name: Upload File-Find.app
      uses: actions/upload-artifact@v2
      with:
          if-no-files-found: error
          name: File Find-pyinstaller
          path: dist/File-Find.app.zip
          

  build-with-py2app:
    name: "Building macOS App with py2app"
    runs-on: macos-11

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        pip3 install py2app
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Build .app with py2app
      run: |
        # x86_64 Build
        py2applet --make-setup File-Find.py assets/icon.icns
        python3 setup.py py2app

    - name: Zip .app
      run: |
        cd dist
        zip -r File-Find.app.zip File-Find.app
    
    - name: Upload File-Find.app
      uses: actions/upload-artifact@v2
      with:
          if-no-files-found: error
          name: File Find-py2app
          path: dist/File-Find.app.zip
